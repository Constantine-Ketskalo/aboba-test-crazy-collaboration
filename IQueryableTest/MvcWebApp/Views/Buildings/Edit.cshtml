@model MvcWebApp.Models.BuildingModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>BuildingModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group d-none">
                <label asp-for="Id" class="control-label"></label>
                <input type="hidden" asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Floors" class="control-label"></label>
                <input asp-for="Floors" class="form-control" />
                <span asp-validation-for="Floors" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="YearBuilt" class="control-label"></label>
                <input asp-for="YearBuilt" class="form-control" />
                <span asp-validation-for="YearBuilt" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="text-danger">
                <p>@Model.ErrorMessage</p>
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
